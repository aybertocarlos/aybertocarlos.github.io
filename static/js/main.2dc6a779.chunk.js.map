{"version":3,"sources":["components/header.js","components/about.js","components/projects.js","components/nowplaying.js","components/footer.js","App.js","serviceWorker.js","index.js","images/aybertocar.png"],"names":["Header","className","alt","src","Logo","ReactMarkdown","require","About","source","escapeHtml","Projects","renderers","link","props","href","target","rel","children","NowPlaying","state","interval","titleSong","title","group","loading","handleInterval","bind","axios","get","then","res","data","JSON","parse","slice","recenttracks","track","nowplaying","music","name","artist","setState","catch","err","intervalId","setInterval","this","clearInterval","_","style","marginLeft","icon","faLastfm","Component","Footer","faGithub","faGlobe","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2dc6a779.chunk.js","sourcesContent":["import React from 'react'\r\nimport Logo from '../images/aybertocar.png'\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <header>\r\n                <img className=\"logo\" alt=\"Logo\" src={Logo} />\r\n                <h1 className=\"site-header\">aybertocarlos.com</h1>\r\n            </header>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nconst ReactMarkdown = require('react-markdown/with-html')\r\n\r\nfunction About() {\r\n    const input = \"PuzzleSubs Anime & Manga çeviri grubunda encoder **ve/veya** site *sorumlusuyumdum*. Artık **FGL Çeviri Topluluğu**'nda kurucu ve encoder sorumlusuyum. Ayrıca KoreanTürk Çeviri Grubunda da çevirmenlik yapmışlığım var (Yaklaşık 2 bölüm).\"\r\n\r\n    return (\r\n        <>\r\n            <section className=\"about\">\r\n                <h2>Hakkımda</h2>\r\n                <ReactMarkdown\r\n                    source={input}\r\n                    escapeHtml={false}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nconst ReactMarkdown = require('react-markdown')\r\n\r\nfunction Projects() {\r\n    const input = \"### [puzzlesubs.com](https://puzzlesubs.com/) \\n PuzzleSubs çeviri grubunun sitesi ön tarafta **ReactJS**, arka tarafta ise **NodeJS** & **ExpressJS** kullanarak tamamen baştan yazıldı.\\n\\n[Buraya tıklayarak proje dökümasyonlarına ulaşabilirsiniz.](https://forfansubs.github.io/docs/) \\n\\n### [aybertocarlos.com](https://aybertocarlos.com/) \\n ㅋㅋㅋㅋㅋㅋ Burayı da **ReactJS** kullanarak hazırladım. Ancak herhangi bir yere bağlı değil, statik bir site. Büyük ihtimalle Github'a yüklemişimdir bu projeyi. Github'dan bakabilirsiniz.\"\r\n\r\n    return (\r\n        <>\r\n            <section className=\"projects\">\r\n                <h2>Projelerim</h2>\r\n                <ReactMarkdown\r\n                    source={input}\r\n                    renderers={{ link: props => <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">{props.children}</a> }}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLastfm } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst link = \"https://ws.audioscrobbler.com/2.0/?method=user.getRecentTracks&user=aybertocarlos&api_key=4a9f5581a9cdf20a699f540ac52a95c9&limit=2&format=json&callback=?\"\r\n\r\nclass NowPlaying extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            interval: \"\",\r\n            titleSong: {\r\n                title: \"\",\r\n                group: \"\"\r\n            },\r\n            loading: true\r\n        }\r\n        this.handleInterval = this.handleInterval.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(link).then(res => {\r\n            const data = JSON.parse(res.data.slice(2, -2))\r\n            if (data.recenttracks.track[\"0\"][\"@attr\"] && data.recenttracks.track[\"0\"][\"@attr\"].nowplaying === \"true\") {\r\n                const music = data.recenttracks.track[\"0\"]\r\n                const titleSong = {\r\n                    title: music.name, group: music.artist[\"#text\"]\r\n                }\r\n                this.setState({ titleSong: titleSong, loading: false })\r\n            }\r\n            else this.setState({ loading: false })\r\n        }).catch(err => {\r\n            this.setState({ loading: false })\r\n        })\r\n\r\n        const intervalId = setInterval(this.handleInterval, 10000);\r\n        this.setState({ interval: intervalId })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.interval)\r\n    }\r\n\r\n    handleInterval() {\r\n        axios.get(link).then(res => {\r\n            const data = JSON.parse(res.data.slice(2, -2))\r\n            if (data.recenttracks.track[\"0\"][\"@attr\"] && data.recenttracks.track[\"0\"][\"@attr\"].nowplaying === \"true\") {\r\n                const music = data.recenttracks.track[\"0\"]\r\n                const titleSong = {\r\n                    title: music.name, group: music.artist[\"#text\"]\r\n                }\r\n                this.setState({ titleSong: titleSong })\r\n            }\r\n            else this.setState({\r\n                titleSong: {\r\n                    title: \"\",\r\n                    group: \"\"\r\n                }\r\n            })\r\n        }).catch(_ => this.setState({\r\n            titleSong: {\r\n                title: \"\",\r\n                group: \"\"\r\n            }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <section className=\"now-playing\">\r\n                    <h4>Now playing:</h4>\r\n                    {this.state.titleSong.title\r\n                        ?\r\n                        <blockquote>{this.state.titleSong.group} - {this.state.titleSong.title}</blockquote>\r\n                        :\r\n                        this.state.loading ?\r\n                            <blockquote>Yükleniyor...</blockquote>\r\n                            :\r\n                            <blockquote>Nothing...</blockquote>\r\n                    }\r\n                    <h4 style={{ marginLeft: \"10px\" }}>Gerçek zamanlı veri (10sn'de bir) - LastFM <FontAwesomeIcon icon={faLastfm} /></h4>\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NowPlaying;","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <footer>\r\n                <h2>Linkler</h2>\r\n                <a className=\"footer-item\" href=\"https://github.com/aybertocarlos\" target=\"_blank\" rel=\"noopener noreferrer\" ><FontAwesomeIcon icon={faGithub} />ac.Github</a>\r\n                <a className=\"footer-item\" href=\"https://fgl.moe\" target=\"_blank\" rel=\"noopener noreferrer\" ><FontAwesomeIcon icon={faGlobe} />.FGL Çeviri Topluluğu</a>\r\n                <a className=\"footer-item\" href=\"https://puzzlesubs.com\" target=\"_blank\" rel=\"noopener noreferrer\" ><FontAwesomeIcon icon={faGlobe} />.PuzzleSubs</a>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\n\nimport Header from './components/header'\nimport About from './components/about'\nimport Projects from './components/projects'\nimport NowPlaying from './components/nowplaying'\nimport Footer from './components/footer'\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<About />\n\t\t\t\t<NowPlaying />\n\t\t\t\t<Projects />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app-mount'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/aybertocar.d3989c88.png\";"],"sourceRoot":""}